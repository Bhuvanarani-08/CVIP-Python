You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.

Example 2:

Input: nums1 = [1], m = 1, nums2 = [], n = 0
Output: [1]
Explanation: The arrays we are merging are [1] and [].
The result of the merge is [1].

Solution :

class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """
        nums1a = nums1.copy()
        nums1a = [0] * (m+n)
        for i in range(m):
            nums1a[i] = nums1[i]
        ind2 = 0
        ind1a = 0
        for ind1 in range(m+n):
            print(ind1a, ind2, nums1)
            if ind1a == m:
                nums1[ind1] = nums2[ind2]
                ind2 += 1
            elif ind2 == n:
                nums1[ind1] = nums1a[ind1a]
                ind1a += 1
            elif nums1a[ind1a] <= nums2[ind2]:
                nums1[ind1] = nums1a[ind1a]
                ind1a += 1
            else:
                nums1[ind1] = nums2[ind2]
                ind2 += 1
